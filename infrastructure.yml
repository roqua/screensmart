# Documentation: https://gitlab.roqua.nl/roqua/playbook/blob/master/content/docker/infrastructure.yml.md

vars:
  project_name: screensmart
  web_port: 3000
  use_roqua_logger:
dynamic_vars:
  environment:
    staging:
      use_roqua_logger: true
    production:
      use_roqua_logger: true
.rails_environment: &rails_environment
  RAILS_ENV: ${environment}
  RACK_ENV: ${environment}
  DATABASE_URL: postgres://postgres@${postgres_host}:5432/${project_name}
  RAILS_SERVE_STATIC_FILES: true
.rails: &rails
  build: .
  image: registry.roqua.nl/roqua/${project_name}:${container_tag}
  depends_on:
    - postgres
  env_files:
    - .env
services:
  web:
    <<: *rails
    command: bundle exec passenger start -p ${web_port}
    environment:
      <<: *rails_environment
      PORT: ${web_port}
      RAILS_LOG_TO_STDOUT_USING_ROQUA_LOGGER: ${use_roqua_logger}
    restart: unless-stopped
    healthcheck:
      test: netstat -an | grep 0.0.0.0:${web_port} > /dev/null; if [ 0 != $$? ]; then exit 1; fi;
    expose:
      - ${web_port}
  shell:
    <<: *rails
    command: bundle exec rails c
    environment:
      <<: *rails_environment
    logging: no
  postgres:
    image: postgres:10
    provided_by: DATABASE_URL
    ports:
      - 5432
    healthcheck:
      test: pg_isready -U postgres
